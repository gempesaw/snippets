# -*- mode: snippet; require-final-newline: nil -*-
# name: gatling
# key: gatling
# binding: direct-keybinding
# --
import scala.concurrent.duration._
import io.gatling.core.Predef._
import io.gatling.http.Predef._

class $2 extends Simulation {
  val baseUrl = System.getProperty("gatling.env", "$4")
  val rps = Integer.getInteger("gatling.rps", 1).toDouble
  val duration = Integer.getInteger("gatling.duration", 30).seconds

  val httpConf = http
    .baseURL(baseUrl)

  val ${2:$(replace-regexp-in-string "^." #'downcase yas/text t)} = scenario(s"$2 $baseUrl")
    .exec($2.$3)

  val requests = 1
  setUp(${2:$(replace-regexp-in-string "^." #'downcase yas/text t)}.inject(
    atOnceUsers(1)
    // constantUsersPerSec(rps / requests) during duration
  ))
    .protocols(httpConf)
    .assertions(
    global.successfulRequests.percent.gte(97)
  )

}

object $2 {

  val $5 = http("$0")

  val $3 = exec($5)

}
